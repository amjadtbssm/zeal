//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_uav_typed_buffer (uint,uint,uint,uint) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_uav_typed_buffer (uint,uint,uint,uint) u4
dcl_input vThreadID.x
dcl_temps 14
dcl_thread_group 32, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- gl_GlobalInvocationID.x; vThreadID.y <- gl_GlobalInvocationID.y; vThreadID.z <- gl_GlobalInvocationID.z
//
#line 522 "C:\Users\carte\projects\zeal\shaders\dx11\compute\terrain_lod_cs.bin.hlsl"
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.x, l(2, 2, 2, 2), u4.xyzw
uge r0.x, vThreadID.x, r0.x
if_nz r0.x

#line 524
  ret 

#line 525
endif 

#line 526
ishl r0.x, vThreadID.x, l(1)
ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t8.xyzw  // r0.x <- primID

#line 528
imul null, r0.y, r0.x, l(3)
ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r0.yyyy, t7.yxzw
ld_indexable(buffer)(float,float,float,float) r0.yzw, r0.yyyy, t6.wxyz

#line 530
imad r1.xy, r0.xxxx, l(3, 3, 0, 0), l(1, 2, 0, 0)

#line 529
ld_indexable(buffer)(uint,uint,uint,uint) r1.x, r1.xxxx, t7.xyzw
ld_indexable(buffer)(float,float,float,float) r1.xzw, r1.xxxx, t6.xwyz

#line 530
ld_indexable(buffer)(uint,uint,uint,uint) r1.y, r1.yyyy, t7.yxzw
ld_indexable(buffer)(float,float,float,float) r2.xyz, r1.yyyy, t6.xyzw

#line 531
imad r1.y, vThreadID.x, l(2), l(1)
ld_indexable(buffer)(uint,uint,uint,uint) r1.y, r1.yyyy, t8.yxzw  // r1.y <- key

#line 332
ushr r2.w, r1.y, l(1)  // r2.w <- <parentKey return value>

#line 375
mov r3.z, l(0.500000)

#line 374
mov r4.x, r2.w  // r4.x <- key
mov r5.xyz, l(1.000000,0,0,0)  // r5.x <- xf._m11; r5.y <- xf._m12; r5.z <- xf._m10
mov r6.xyz, l(0,1.000000,0,0)  // r6.x <- xf._m21; r6.y <- xf._m22; r6.z <- xf._m20
loop 
  uge r4.y, l(1), r4.x
  breakc_nz r4.y

#line 375
  and r4.y, r4.x, l(1)

#line 361
  utof r3.x, r4.y  // r3.x <- b

#line 375
  add r3.yw, -r3.xxxx, l(0.000000, 1.000000, 0.000000, 1.000000)
  dp2 r3.y, r5.yxyy, r3.xyxx  // r3.y <- xf._m10
  dp2 r5.x, r5.xzxx, r3.xzxx
  dp2 r5.y, r5.zyzz, r3.zwzz
  mad r7.xyzw, r3.xxzx, l(-1.000000, 1.000000, 1.000000, -1.000000), l(1.000000, 0.000000, 0.000000, 1.000000)
  dp2 r3.w, r6.xyxx, r7.xyxx  // r3.w <- xf._m20
  dp2 r6.x, r6.xzxx, r3.xzxx
  dp2 r6.y, r6.zyzz, r7.zwzz

#line 376
  ushr r4.x, r4.x, l(1)

#line 377
  mov r5.z, r3.y  // r5.z <- xf._m10
  mov r6.z, r3.w  // r6.z <- xf._m20
endloop 

#line 375
mov r3.z, l(0.500000)

#line 374
mov r4.x, r1.y
mov r7.xyz, l(0,0,1.000000,0)  // r7.x <- xf._m01; r7.y <- xf._m02; r7.z <- xf._m00
mov r8.xyz, l(1.000000,0,0,0)  // r8.x <- xf._m11; r8.y <- xf._m12; r8.z <- xf._m10
mov r9.xyz, l(0,1.000000,0,0)  // r9.x <- xf._m21; r9.y <- xf._m22; r9.z <- xf._m20
loop 
  uge r4.y, l(1), r4.x
  breakc_nz r4.y

#line 375
  and r4.y, r4.x, l(1)

#line 361
  utof r3.x, r4.y  // r3.x <- b

#line 375
  add r3.yw, -r3.xxxx, l(0.000000, 1.000000, 0.000000, 1.000000)
  dp2 r3.y, r7.yxyy, r3.xyxx  // r3.y <- xf._m00
  dp2 r7.x, r7.xzxx, r3.xzxx
  dp2 r7.y, r7.zyzz, r3.zwzz
  mad r10.xyzw, r3.xxzx, l(-1.000000, 1.000000, 1.000000, -1.000000), l(1.000000, 0.000000, 0.000000, 1.000000)
  dp2 r3.w, r8.xyxx, r10.xyxx  // r3.w <- xf._m10
  dp2 r8.x, r8.xzxx, r3.xzxx
  dp2 r8.y, r8.zyzz, r10.zwzz
  dp2 r4.y, r9.xyxx, r10.xyxx  // r4.y <- xf._m20
  dp2 r9.x, r9.xzxx, r3.xzxx
  dp2 r9.y, r9.zyzz, r10.zwzz

#line 376
  ushr r4.x, r4.x, l(1)

#line 377
  mov r7.z, r3.y  // r7.z <- xf._m00
  mov r8.z, r3.w  // r8.z <- xf._m10
  mov r9.z, r4.y  // r9.z <- xf._m20
endloop 

#line 398
mul r3.xy, r1.xzxx, r7.xxxx
mad r3.xy, r7.zzzz, r0.yzyy, r3.xyxx
mad r3.xy, r7.yyyy, r2.xyxx, r3.xyxx  // r3.x <- v._m00; r3.y <- v._m01
mul r4.xyz, r1.xzwx, r8.xxxx
mad r4.xyz, r8.zzzz, r0.yzwy, r4.xyzx
mad r4.xyz, r8.yyyy, r2.xyzx, r4.xyzx  // r4.x <- v._m10; r4.y <- v._m11; r4.z <- v._m12
mul r7.xyz, r1.xzwx, r9.xxxx
mad r7.xyz, r9.zzzz, r0.yzwy, r7.xyzx
mad r7.xyz, r9.yyyy, r2.xyzx, r7.xyzx  // r7.x <- v._m20; r7.y <- v._m21; r7.z <- v._m22

#line 551
eq r3.zw, cb0[12].wwwz, l(0.000000, 0.000000, 0.000000, 0.000000)

#line 536
if_nz r3.z

#line 399
  mul r8.xyz, r1.xzwx, r5.xxxx
  mad r5.xzw, r5.zzzz, r0.yyzw, r8.xxyz
  mad r5.xyz, r5.yyyy, r2.xyzx, r5.xzwx  // r5.x <- vp._m10; r5.y <- vp._m11; r5.z <- vp._m12
  mul r1.xzw, r1.xxzw, r6.xxxx
  mad r0.yzw, r6.zzzz, r0.yyzw, r1.xxzw
  mad r0.yzw, r6.yyyy, r2.xxyz, r0.yyzw  // r0.y <- vp._m20; r0.z <- vp._m21; r0.w <- vp._m22

#line 429
  add r1.xzw, r4.xxyz, r7.xxyz
  mul r1.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)  // r1.x <- c.x; r1.z <- c.y

#line 414
  mad r2.xy, cb0[3].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)

#line 93
  sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t0.xyzw, s0, l(0.000000)  // r2.x <- <bgfxTexture2DLod return value>.x

#line 414
  mul r2.x, r2.x, cb0[12].x  // r2.x <- <dmap return value>

#line 422
  mad r1.w, r1.w, l(0.500000), r2.x  // r1.w <- c.z

#line 423
  mul r6.xyz, r1.zzzz, cb0[5].xyzx
  mad r6.xyz, cb0[4].xyzx, r1.xxxx, r6.xyzx
  mad r1.xzw, cb0[6].xxyz, r1.wwww, r6.xxyz
  add r1.xzw, r1.xxzw, cb0[7].xxyz  // r1.x <- cxf.x; r1.z <- cxf.y; r1.w <- cxf.z

#line 424
  dp3 r1.x, r1.xzwx, r1.xzwx
  sqrt r1.x, r1.x  // r1.x <- z

#line 418
  mul_sat r1.x, r1.x, cb0[12].y
  log r1.x, r1.x
  mul r1.x, r1.x, l(-2.000000)  // r1.x <- <distanceToLod return value>

#line 538
  ftou r1.x, r1.x  // r1.x <- targetLod

#line 429
  add r0.yzw, r0.yyzw, r5.xxyz
  mul r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)  // r0.y <- c.x; r0.z <- c.y

#line 422
  mad r0.w, r0.w, l(0.500000), r2.x  // r0.w <- c.z

#line 423
  mul r2.xyz, r0.zzzz, cb0[5].xyzx
  mad r2.xyz, cb0[4].xyzx, r0.yyyy, r2.xyzx
  mad r0.yzw, cb0[6].xxyz, r0.wwww, r2.xxyz
  add r0.yzw, r0.yyzw, cb0[7].xxyz  // r0.y <- cxf.x; r0.z <- cxf.y; r0.w <- cxf.z

#line 424
  dp3 r0.y, r0.yzwy, r0.yzwy
  sqrt r0.y, r0.y  // r0.y <- z

#line 418
  mul_sat r0.y, r0.y, cb0[12].y
  log r0.y, r0.y
  mul r0.y, r0.y, l(-2.000000)  // r0.y <- <distanceToLod return value>

#line 539
  ftou r0.y, r0.y  // r0.y <- parentLod

#line 540
else 

#line 319
  mov r0.yz, l(0,-1,0,0)  // r0.z <- i; r0.y <- res
  loop 
    uge r0.w, r0.z, l(32)
    breakc_nz r0.w

#line 321
    ushr r0.w, l(0x80000000), r0.z  // r0.w <- mask

#line 322
    and r0.w, r0.w, r1.y
    if_nz r0.w

#line 324
      iadd r0.y, -r0.z, l(31)

#line 325
      break 

#line 326
    endif 

#line 319
    iadd r0.z, r0.z, l(1)

#line 327
    mov r0.y, l(-1)
  endloop 

#line 544
  mov r1.x, r0.y  // r1.x <- targetLod; r0.y <- parentLod
endif 

#line 319
mov r0.zw, l(0,0,0,-1)  // r0.z <- i; r0.w <- res
loop 
  uge r1.z, r0.z, l(32)
  breakc_nz r1.z

#line 321
  ushr r1.z, l(0x80000000), r0.z  // r1.z <- mask

#line 322
  and r1.z, r1.z, r1.y
  if_nz r1.z

#line 324
    iadd r0.w, -r0.z, l(31)

#line 325
    break 

#line 326
  endif 

#line 319
  iadd r0.z, r0.z, l(1)

#line 327
  mov r0.w, l(-1)
endloop 

#line 453
ult r0.z, r0.w, r1.x

#line 319
mov r1.xz, l(0,0,-1,0)  // r1.x <- i; r1.z <- res
loop 
  uge r1.w, r1.x, l(32)
  breakc_nz r1.w

#line 321
  ushr r1.w, l(0x80000000), r1.x  // r1.w <- mask

#line 322
  and r1.w, r1.w, r1.y
  if_nz r1.w

#line 324
    iadd r1.z, -r1.x, l(31)

#line 325
    break 

#line 326
  endif 

#line 319
  iadd r1.x, r1.x, l(1)

#line 327
  mov r1.z, l(-1)
endloop 

#line 453
ine r1.x, r1.z, l(31)
and r0.z, r0.z, r1.x
if_nz r0.z

#line 336
  ishl r0.z, r1.y, l(1)

#line 337
  bfi r1.x, l(31), l(1), r1.y, l(1)

#line 440
  imm_atomic_iadd r5.x, u4, l(0), l(2)  // r5.x <- idx

#line 441
  store_uav_typed u1.xyzw, r5.xxxx, r0.xxxx

#line 442
  iadd r1.z, r5.x, l(1)
  store_uav_typed u1.xyzw, r1.zzzz, r0.zzzz

#line 440
  imm_atomic_iadd r5.x, u4, l(0), l(2)

#line 441
  store_uav_typed u1.xyzw, r5.xxxx, r0.xxxx

#line 442
  iadd r0.z, r5.x, l(1)
  store_uav_typed u1.xyzw, r0.zzzz, r1.xxxx

#line 458
else 

#line 459
  iadd r0.y, r0.y, l(1)
  ult r0.y, r0.w, r0.y
  if_nz r0.y

#line 440
    imm_atomic_iadd r5.x, u4, l(0), l(2)  // r5.x <- idx

#line 441
    store_uav_typed u1.xyzw, r5.xxxx, r0.xxxx

#line 442
    iadd r0.y, r5.x, l(1)
    store_uav_typed u1.xyzw, r0.yyyy, r1.yyyy

#line 462
  else 

#line 341
    ieq r0.y, r1.y, l(1)  // r0.y <- <isRootKey return value>

#line 465
    if_nz r0.y

#line 440
      imm_atomic_iadd r5.x, u4, l(0), l(2)  // r5.x <- idx

#line 441
      store_uav_typed u1.xyzw, r5.xxxx, r0.xxxx

#line 442
      iadd r0.y, r5.x, l(1)
      store_uav_typed u1.xyzw, r0.yyyy, l(1,1,1,1)

#line 468
    else 

#line 349
      and r0.y, r1.y, l(1)

#line 469
      if_z r0.y

#line 440
        imm_atomic_iadd r5.x, u4, l(0), l(2)  // r5.x <- idx

#line 441
        store_uav_typed u1.xyzw, r5.xxxx, r0.xxxx

#line 442
        iadd r0.y, r5.x, l(1)
        store_uav_typed u1.xyzw, r0.yyyy, r2.wwww

#line 471
      endif 
    endif 

#line 472
  endif 
endif 

#line 547
min r0.yz, r3.xxyx, r4.xxyx
min r2.xy, r7.xyxx, r0.yzyy  // r2.x <- bmin.x; r2.y <- bmin.y

#line 548
max r0.yz, r3.xxyx, r4.xxyx
max r3.xy, r7.xyxx, r0.yzyy  // r3.x <- bmax.x; r3.y <- bmax.y

#line 489
add r0.yzw, cb0[8].xxyz, cb0[8].wwww  // r0.y <- f.planes[0].x; r0.z <- f.planes[2].x; r0.w <- f.planes[4].x

#line 490
add r1.xzw, cb0[9].xxyz, cb0[9].wwww  // r1.x <- f.planes[0].y; r1.z <- f.planes[2].y; r1.w <- f.planes[4].y

#line 491
add r4.xyz, cb0[10].xyzx, cb0[10].wwww  // r4.x <- f.planes[0].z; r4.y <- f.planes[2].z; r4.z <- f.planes[4].z

#line 492
add r5.xyw, cb0[11].xyxz, cb0[11].wwww  // r5.x <- f.planes[0].w; r5.y <- f.planes[2].w; r5.w <- f.planes[4].w

#line 493
mov r6.x, r0.y
mov r6.y, r1.x
mov r6.z, r4.x
dp3 r0.y, r6.xyzx, r6.xyzx
sqrt r0.y, r0.y
mov r6.w, r5.x
mul r6.xyzw, r0.yyyy, r6.xyzw  // r6.x <- f.planes[0].x; r6.y <- f.planes[0].y; r6.z <- f.planes[0].z; r6.w <- f.planes[0].w

#line 489
add r7.xyz, -cb0[8].xyzx, cb0[8].wwww  // r7.x <- f.planes[1].x; r7.y <- f.planes[3].x; r7.z <- f.planes[5].x

#line 490
add r8.xyz, -cb0[9].xyzx, cb0[9].wwww  // r8.x <- f.planes[1].y; r8.y <- f.planes[3].y; r8.z <- f.planes[5].y

#line 491
add r9.xyz, -cb0[10].xyzx, cb0[10].wwww  // r9.x <- f.planes[1].z; r9.y <- f.planes[3].z; r9.z <- f.planes[5].z

#line 492
add r10.xyw, -cb0[11].xyxz, cb0[11].wwww  // r10.x <- f.planes[1].w; r10.y <- f.planes[3].w; r10.w <- f.planes[5].w

#line 493
mov r11.x, r7.x
mov r11.y, r8.x
mov r11.z, r9.x
dp3 r0.y, r11.xyzx, r11.xyzx
sqrt r0.y, r0.y
mov r11.w, r10.x
mul r11.xyzw, r0.yyyy, r11.xyzw  // r11.x <- f.planes[1].x; r11.y <- f.planes[1].y; r11.z <- f.planes[1].z; r11.w <- f.planes[1].w
mov r12.x, r0.z
mov r12.y, r1.z
mov r12.z, r4.y
dp3 r0.y, r12.xyzx, r12.xyzx
sqrt r0.y, r0.y
mov r12.w, r5.y
mul r12.xyzw, r0.yyyy, r12.xyzw  // r12.x <- f.planes[2].x; r12.y <- f.planes[2].y; r12.z <- f.planes[2].z; r12.w <- f.planes[2].w
mov r13.x, r7.y
mov r13.y, r8.y
mov r13.z, r9.y
dp3 r0.y, r13.xyzx, r13.xyzx
sqrt r0.y, r0.y
mov r13.w, r10.y
mul r13.xyzw, r0.yyyy, r13.xyzw  // r13.x <- f.planes[3].x; r13.y <- f.planes[3].y; r13.z <- f.planes[3].z; r13.w <- f.planes[3].w
mov r5.x, r0.w
mov r5.y, r1.w
mov r5.z, r4.z
dp3 r0.y, r5.xyzx, r5.xyzx
sqrt r0.y, r0.y
mul r4.xyzw, r0.yyyy, r5.xyzw  // r4.x <- f.planes[4].x; r4.y <- f.planes[4].y; r4.w <- f.planes[4].w
mov r10.x, r7.z
mov r10.y, r8.z
mov r10.z, r9.z
dp3 r0.y, r10.xyzx, r10.xyzx
sqrt r0.y, r0.y
mul r5.xyzw, r0.yyyy, r10.xyzw  // r5.x <- f.planes[5].x; r5.y <- f.planes[5].y; r5.z <- f.planes[5].z; r5.w <- f.planes[5].w

#line 246
mov r2.z, l(0)
mov r3.z, cb0[12].x
add r0.yzw, -r2.xxyz, r3.xxyz

#line 510
mov r7.w, l(1.000000)

#line 507
mov r1.xz, l(1.000000,0,0,0)  // r1.x <- a; r1.z <- i
loop 
  ilt r1.w, r1.z, l(6)
  ge r2.w, r1.x, l(0.000000)
  and r1.w, r1.w, r2.w
  breakc_z r1.w

#line 509
  ieq r8.xyzw, r1.zzzz, l(2, 3, 4, 5)
  ieq r1.w, r1.z, l(1)
  movc r2.w, r1.z, l(0), l(1.000000)
  and r1.w, r1.w, l(0x3f800000)
  and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  mul r3.xyz, r6.xyzx, r2.wwww
  mad r3.xyz, r1.wwww, r11.xyzx, r3.xyzx
  mad r3.xyz, r8.xxxx, r12.xyzx, r3.xyzx
  mad r3.xyz, r8.yyyy, r13.xyzx, r3.xyzx
  mad r3.xyz, r8.zzzz, r4.xyzx, r3.xyzx
  mad r3.xyz, r8.wwww, r5.xyzx, r3.xyzx  // r3.x <- n.x; r3.y <- n.y; r3.z <- n.z

#line 233
  lt r3.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx  // r3.x <- <greaterThan return value>.x; r3.y <- <greaterThan return value>.y; r3.z <- <greaterThan return value>.z

#line 500
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)  // r3.x <- _t.x; r3.y <- _t.y; r3.z <- _t.z

#line 246
  mad r7.xyz, r3.xyzx, r0.yzwy, r2.xyzx  // r7.x <- <mix return value>.x; r7.y <- <mix return value>.y; r7.z <- <mix return value>.z

#line 510
  mul r9.xyzw, r6.xyzw, r2.wwww
  mad r9.xyzw, r1.wwww, r11.xyzw, r9.xyzw
  mad r9.xyzw, r8.xxxx, r12.xyzw, r9.xyzw
  mad r9.xyzw, r8.yyyy, r13.xyzw, r9.xyzw
  mad r9.xyzw, r8.zzzz, r4.xyzw, r9.xyzw
  mad r8.xyzw, r8.wwww, r5.xyzw, r9.xyzw
  dp4 r1.x, r7.xyzw, r8.xyzw

#line 511
  iadd r1.z, r1.z, l(1)
endloop 

#line 512
ge r0.y, r1.x, l(0.000000)  // r0.y <- <frustumCullingTest return value>

#line 551
or r0.y, r0.y, r3.w
if_nz r0.y

#line 555
  imm_atomic_iadd r2.x, u4, l(1), l(2)  // r2.x <- idx

#line 556
  store_uav_typed u2.xyzw, r2.xxxx, r0.xxxx

#line 557
  iadd r0.x, r2.x, l(1)
  store_uav_typed u2.xyzw, r0.xxxx, r1.yyyy

#line 558
endif 

#line 559
ret 
// Approximately 0 instruction slots used
 